{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nlet ListaAlbunsComponent = class ListaAlbunsComponent {\n  constructor(photoService) {\n    this.photoService = photoService;\n    this.title = '';\n    // fotos: Photo[] = []\n    this.fotos$ = new Observable();\n    // form\n    this.id = '';\n    this.photo = '';\n    this.url = '';\n    this.obterFotosCadastradas();\n  }\n  obterFotosCadastradas() {\n    this.fotos$ = this.photoService.obterFotos();\n  }\n  buttonClick() {\n    if (!this.photo || !this.title) return;\n    if (this.id) {\n      this.atualizar();\n      return;\n    }\n    this.photoService.cadastrarFoto({\n      title: this.title\n    }).subscribe(_ => this.obterFotosCadastradas());\n  }\n  atualizar() {\n    this.photoService.editarFoto({\n      id: parseInt(this.id),\n      title: this.title\n    }).subscribe(_ => this.obterFotosCadastradas());\n  }\n  preencherCampos(photo) {\n    this.id = photo.id.toString();\n    //this.url = photo.url;\n    this.title = photo.title;\n  }\n  remover(id) {\n    this.photoService.remover(id).subscribe(_ => this.obterFotosCadastradas());\n  }\n};\nListaAlbunsComponent = __decorate([Component({\n  selector: 'app-lista-albuns',\n  templateUrl: './lista-albuns.component.html',\n  styleUrls: ['./lista-albuns.component.scss']\n})], ListaAlbunsComponent);\nexport { ListaAlbunsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,UAAU,QAAQ,MAAM;AAQ1B,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAW/BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;IAVhC,UAAK,GAAG,EAAE;IAEV;IACA,WAAM,GAAG,IAAIH,UAAU,EAAW;IAElC;IACA,OAAE,GAAG,EAAE;IACP,UAAK,GAAG,EAAE;IACV,QAAG,GAAG,EAAE;IAGN,IAAI,CAACI,qBAAqB,EAAE;EAC9B;EAEAA,qBAAqB;IACnB,IAAI,CAACC,MAAM,GAAG,IAAI,CAACF,YAAY,CAACG,UAAU,EAAE;EAC9C;EAEAC,WAAW;IACT,IAAI,CAAC,IAAI,CAACC,KAAK,IAAI,CAAC,IAAI,CAACC,KAAK,EAC5B;IAEF,IAAI,IAAI,CAACC,EAAE,EAAE;MACX,IAAI,CAACC,SAAS,EAAE;MAChB;;IAGF,IAAI,CAACR,YAAY,CAACS,aAAa,CAAC;MAAEH,KAAK,EAAE,IAAI,CAACA;IAAK,CAAE,CAAC,CACnDI,SAAS,CAACC,CAAC,IAAI,IAAI,CAACV,qBAAqB,EAAE,CAAC;EACjD;EAEAO,SAAS;IACP,IAAI,CAACR,YAAY,CAACY,UAAU,CAAC;MAC3BL,EAAE,EAAEM,QAAQ,CAAC,IAAI,CAACN,EAAE,CAAC;MAAED,KAAK,EAAE,IAAI,CAACA;KAAQ,CAAC,CAC3CI,SAAS,CAACC,CAAC,IAAI,IAAI,CAACV,qBAAqB,EAAE,CAAC;EACjD;EAEAa,eAAe,CAACT,KAAY;IAC1B,IAAI,CAACE,EAAE,GAAGF,KAAK,CAACE,EAAG,CAACQ,QAAQ,EAAE;IAC9B;IACA,IAAI,CAACT,KAAK,GAAGD,KAAK,CAACC,KAAK;EAC1B;EAEAU,OAAO,CAACT,EAAU;IAChB,IAAI,CAACP,YAAY,CAACgB,OAAO,CAACT,EAAE,CAAC,CAC1BG,SAAS,CAACC,CAAC,IAAI,IAAI,CAACV,qBAAqB,EAAE,CAAC;EACjD;CACD;AAhDYH,oBAAoB,eALhCF,SAAS,CAAC;EACTqB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWrB,oBAAoB,CAgDhC;SAhDYA,oBAAoB","names":["Component","Observable","ListaAlbunsComponent","constructor","photoService","obterFotosCadastradas","fotos$","obterFotos","buttonClick","photo","title","id","atualizar","cadastrarFoto","subscribe","_","editarFoto","parseInt","preencherCampos","toString","remover","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\linco\\Downloads\\desafio_frontend_teia-main\\desafio_frontend_teia-main\\src\\app\\lista-albuns\\lista-albuns.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Photo } from '../models/photo.model';\nimport { Observable } from 'rxjs';\nimport { PhotoService } from '../services/photo.service';\n\n@Component({\n  selector: 'app-lista-albuns',\n  templateUrl: './lista-albuns.component.html',\n  styleUrls: ['./lista-albuns.component.scss']\n})\nexport class ListaAlbunsComponent {\n  title = '';\n\n  // fotos: Photo[] = []\n  fotos$ = new Observable<Photo[]>();\n\n  // form\n  id = '';\n  photo = '';\n  url = '';\n\n  constructor(private photoService: PhotoService) {\n    this.obterFotosCadastradas();\n  }\n\n  obterFotosCadastradas() {\n    this.fotos$ = this.photoService.obterFotos();\n  }\n\n  buttonClick() {\n    if (!this.photo || !this.title)\n      return;\n\n    if (this.id) {\n      this.atualizar();\n      return;\n    }\n\n    this.photoService.cadastrarFoto({ title: this.title })\n      .subscribe(_ => this.obterFotosCadastradas())\n  }\n\n  atualizar() {\n    this.photoService.editarFoto({\n      id: parseInt(this.id), title: this.title  })\n      .subscribe(_ => this.obterFotosCadastradas());\n  }\n\n  preencherCampos(photo: Photo) {\n    this.id = photo.id!.toString();\n    //this.url = photo.url;\n    this.title = photo.title;\n  }\n\n  remover(id: number) {\n    this.photoService.remover(id)\n      .subscribe(_ => this.obterFotosCadastradas());\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}